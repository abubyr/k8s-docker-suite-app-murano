#!/bin/bash
install-packages curl wget linux-libc-dev git gcc libc6-dev bridge-utils haproxy ntp ntpdate

SVC_ROOT=/opt/bin

ARCH=$(uname -m)
case $ARCH in
  ppc64el)
          ARCH=ppc64le
          ;;
  x86_64)
          ARCH=amd64
          ;;
  ppc64le | arm | arm64)
          ;;
  *)
    echo "Unsupported platform for Kubernetes. Only amd64, ppc64le, arm, arm64 are supported"
    exit 1
esac

GOLANG_DOWNLOAD_VERSION="1.6.4"
ETCD_LATEST_VERSION="v3.0.14"
#KUBE_LATEST_VERSION="v1.3.0"
KUBE_LATEST_VERSION="v1.6.0-alpha.1"
FLANNEL_LATEST_VERSION="v0.5.5"
#CONFD_LATEST_VERSION="v0.7.1"
CONFD_LATEST_VERSION="v0.12.1"
CONFD_GIT_REPO="bacongobbler"

ETCD_LATEST_URL="https://github.com/coreos/etcd/releases/download/${ETCD_LATEST_VERSION}/etcd-${ETCD_LATEST_VERSION}-linux-amd64.tar.gz"
#KUBE_LATEST_URL="https://github.com/GoogleCloudPlatform/kubernetes/releases/download/${KUBE_LATEST_VERSION}/kubernetes.tar.gz"
KUBE_LATEST_URL="https://dl.k8s.io/${KUBE_LATEST_VERSION}/kubernetes-server-linux-ppc64le.tar.gz"
FLANNEL_LATEST_URL="https://github.com/coreos/flannel/archive/${FLANNEL_LATEST_VERSION}.tar.gz"

mkdir -p ${SVC_ROOT}
pushd ${SVC_ROOT}

# Install Go
wget -O go.tar.gz https://storage.googleapis.com/golang/go${GOLANG_DOWNLOAD_VERSION}.linux-${ARCH}.tar.gz
tar xzvf go.tar.gz
mv ${SVC_ROOT}/go /usr/local/go
export PATH=$PATH:/usr/local/go/bin

if [ ${ARCH} = amd64 ]; then
    # Install latest etcd
    wget -O ${SVC_ROOT}/etcd-latest.tar.gz $ETCD_LATEST_URL
    tar xzvf ${SVC_ROOT}/etcd-latest.tar.gz
    rm -f ${SVC_ROOT}/etcd-latest.tar.gz

    mv ${SVC_ROOT}/etcd-${ETCD_LATEST_VERSION}-linux-amd64/etcd ${SVC_ROOT}/
    mv ${SVC_ROOT}/etcd-${ETCD_LATEST_VERSION}-linux-amd64/etcdctl ${SVC_ROOT}/

    rm -rf ${SVC_ROOT}/etcd-${ETCD_LATEST_VERSION}-linux-amd64
else
    # Build etcd
    git clone -b ${ETCD_LATEST_VERSION} https://github.com/coreos/etcd ${SVC_ROOT}/src/github.com/coreos/etcd
    pushd ${SVC_ROOT}/src/github.com/coreos/etcd
    GOPATH=${SVC_ROOT} ${SVC_ROOT}/src/github.com/coreos/etcd/build
    popd

    mv ${SVC_ROOT}/src/github.com/coreos/etcd/bin/etcd ${SVC_ROOT}/
    mv ${SVC_ROOT}/src/github.com/coreos/etcd/bin/etcdctl ${SVC_ROOT}/

    rm -rf ${SVC_ROOT}/src
    echo "ETCD_UNSUPPORTED_ARCH=${ARCH}" >> /etc/environment
fi

# Install latest kubernetes
wget -O ${SVC_ROOT}/kubernetes-latest.tar.gz $KUBE_LATEST_URL
tar xzvf ${SVC_ROOT}/kubernetes-latest.tar.gz
rm -f ${SVC_ROOT}/kubernetes-latest.tar.gz

#tar xzvf ${SVC_ROOT}/kubernetes/server/kubernetes-server-linux-${ARCH}.tar.gz
mv ${SVC_ROOT}/kubernetes ${SVC_ROOT}/kubernetes-latest

cp ${SVC_ROOT}/kubernetes-latest/server/bin/* ${SVC_ROOT}/

# Build flannel
wget -O ${SVC_ROOT}/flannel-latest.tar.gz $FLANNEL_LATEST_URL
tar xzvf ${SVC_ROOT}/flannel-latest.tar.gz
rm -f ${SVC_ROOT}/flannel-latest.tar.gz

mv ${SVC_ROOT}/flannel-* ${SVC_ROOT}/flannel

pushd ${SVC_ROOT}/flannel
${SVC_ROOT}/flannel/build
popd

cp ${SVC_ROOT}/flannel/bin/flanneld ${SVC_ROOT}/flanneld

rm -rf ${SVC_ROOT}/flannel


# Update system PATH
sed -i 's/PATH="/PATH="\/opt\/bin:\/opt\/go\/bin:/g' /etc/environment

# Get confd
if [ ${ARCH} = amd64 ]; then
    wget -O confd https://github.com/kelseyhightower/confd/releases/download/${CONFD_LATEST_VERSION}/confd-${CONFD_LATEST_VERSION#v*}-linux-amd64
    mv confd /usr/local/bin/confd
else
    # Install godep utility
    GOPATH=${SVC_ROOT} go get github.com/tools/godep

    git clone -b ${CONFD_LATEST_VERSION} https://github.com/${CONFD_GIT_REPO}/confd.git ${SVC_ROOT}/src/github.com/kelseyhightower/confd
    pushd ${SVC_ROOT}/src/github.com/kelseyhightower/confd
    # Build confd
    # WARNING: Method is appicable for confd v0.6.x-v0.7.x
    # Nearly each major confd version has unique build method
    mkdir -p bin/; GOPATH=${SVC_ROOT} ${SVC_ROOT}/bin/godep go build -o bin/confd .
    popd
    mv src/github.com/kelseyhightower/confd/bin/confd /usr/local/bin/confd
    rm -rf ${SVC_ROOT}/{src,bin,pkg}
fi

chmod +x /usr/local/bin/confd
mkdir -p /etc/confd/{conf.d,templates}

popd

if [[ $(lsb_release -c -s) == 'jessie' ]]; then
    #Enable cgroup memory if Debian 8 is used. Required by k8s since 1.2
    echo 'GRUB_CMDLINE_LINUX="cgroup_enable=memory swapaccount=1"' >> /etc/default/grub

    #Do not start haproxy on vm boot
    systemctl disable haproxy
fi
